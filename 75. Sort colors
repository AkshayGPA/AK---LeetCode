https://leetcode.com/problems/sort-colors/description/

// In place algorithm

class Solution {
    public void sortColors(int[] nums) {
        
        int n = nums.length;

        int redCount = 0;
        int whiteCount = 0;
        int blueCount = 0;
        
        // for (int i=0 ; i<n ; i++){
        //     for (int j=0 ; j<n-1-i ; j++){
        //         if (nums[j] > nums[j+1]){
        //             int temp = nums[j];
        //             nums[j] = nums[j+1];
        //             nums[j+1] = temp;
        //         }
        //     }
        // }

        // count number of 

        for (int i=0  ;i<n ; i++){
            if(nums[i] == 0){
                redCount++;
            }
            else if (nums[i] == 1){
                whiteCount++;
            } 
            else {
                blueCount++;
            }
        }

        int [] result = new int[n];

        for (int i=0 ; i<redCount ; i++){
            nums[i] = 0;
            // System.out.println(result[i]);
        }

        for (int i=redCount ; i<(redCount+whiteCount) ; i++){
            nums[i] = 1;
            // System.out.println(result[i]);
        }

        for (int i=(redCount+whiteCount) ; i<n ; i++){
            nums[i] = 2;
            // System.out.println(result[i]);
        }
    }
}