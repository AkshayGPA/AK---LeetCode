https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/


class Solution {
    public int maxProfit(int[] prices) {
        int buy_price = Integer.MAX_VALUE; // Did not get this thought quickly.
        int profit_today = 0;
        int profit_so_far = 0;

        int n = prices.length;

        // for (int i=0 ; i<n ; i++) {
        //     for (int j=n-1 ; j>i ; j--){
        //         max = Math.max(max, prices[j]-prices[i]);
        //     }
        // }

        // return max;

        // Logic understood from pinned solution in LeetCode

        for (int i=0 ; i<n ; i++){
            if (prices[i] < buy_price){
                buy_price = prices[i];  // 7 ; 1 ; none ; none ; none ; none
            }

            profit_today = prices[i] - buy_price;  // 0 ; 0 ; (5-1 = 4) ; (3-1 = 2) ; (6-1 = 5) ; (4-1 = 3) 

            if (profit_so_far < profit_today){
                profit_so_far = profit_today;  // none ; none ; 4 ; none ; 5 ; none
            }
        }

        return profit_so_far;
    }
}

// 5 3 6 4 1 7