https://leetcode.com/problems/two-sum/description/


class Solution {
    public int[] twoSum(int[] nums, int target) {

        // int [] arr = new int[2];
        
        // for (int i=0 ; i<nums.length ; i++) {
        //     for (int j=i+1 ; j<nums.length ; j++) {
        //         if (nums[i]+nums[j] == target){
        //             arr[0] = i;
        //             arr[1] = j;
        //         }
        //     }
        // }

        // // int [] arr = new int[2];
        // // arr[0] = index1;
        // // arr[1] = index2;

        // return arr;


// Solving using HashMaps


        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();

        int[] ans = new int[2];

        for (int i=0 ; i<nums.length ; i++){

            if (hm.containsKey(target - nums[i])){
                ans[0] = hm.get(target - nums[i]);
                ans[1] = i;
                return ans;
            }
            else{
                hm.put(nums[i], i);
            }
        }

        // for (Integer num : hm.keySet()){
        //     System.out.println(hm.getKey() + " " + hm.getValue());
        // }

        // for (int i=0 ; i<hm.size() ; i++){
        //     System.out.println(hm.getKey(i) + " " + hm.getValue(i));
        // }

        return ans;
    }
}
